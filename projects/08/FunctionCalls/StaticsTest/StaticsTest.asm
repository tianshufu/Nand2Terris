//Init
//bootstrap
@256
D=A
@SP
M=D
//PUSH Return address
@RETURN0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-N-5
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(RETURN0)
//function Class1.set 0
(Class1.set)
//push argument 0
@0
D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
M=M-1
A=M
D=M
@Static.0
M=D
//push argument 1
@1
D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
M=M-1
A=M
D=M
@Static.1
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
//FRAME=LCL
@LCL
D=M
@FRAME
M=D
//RET=*(FRAME-5)
@5
D=D-A
A=D
D=M
@RET
M=D
//*ARG=POP()
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
//SP=ARG+1
@ARG
D=M+1
@SP
M=D
//THAT=*(FRAME-1)
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
//THIS=*(FRAME-2)
@FRAME
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//ARG=*(FRAME-3)
@FRAME
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//LCL=*(FRAME-4)
@FRAME
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goto ret
@RET
A=M
0;JMP
//function Class1.get 0
(Class1.get)
//push static 0
@Static.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Static.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M
A=A-1
A=A-1
D=M
A=A+1
D=D-M
@SP
M=M-1
M=M-1
A=M
M=D
@SP
M=M+1
//return
//FRAME=LCL
@LCL
D=M
@FRAME
M=D
//RET=*(FRAME-5)
@5
D=D-A
A=D
D=M
@RET
M=D
//*ARG=POP()
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
//SP=ARG+1
@ARG
D=M+1
@SP
M=D
//THAT=*(FRAME-1)
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
//THIS=*(FRAME-2)
@FRAME
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//ARG=*(FRAME-3)
@FRAME
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//LCL=*(FRAME-4)
@FRAME
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goto ret
@RET
A=M
0;JMP
//function Sys.init 0
(Sys.init)
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class1.set 2
//PUSH Return address
@RETURN20
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-N-5
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(RETURN20)
//pop temp 0
@SP
M=M-1
A=M
D=M
@5
M=D
//push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class2.set 2
//PUSH Return address
@RETURN21
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-N-5
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(RETURN21)
//pop temp 0
@SP
M=M-1
A=M
D=M
@5
M=D
//call Class1.get 0
//PUSH Return address
@RETURN22
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-N-5
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(RETURN22)
//call Class2.get 0
//PUSH Return address
@RETURN23
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-N-5
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(RETURN23)
//label WHILE
(WHILE)
//goto WHILE
@WHILE
0;JMP
//function Class2.set 0
(Class2.set)
//push argument 0
@0
D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
M=M-1
A=M
D=M
@Static.0
M=D
//push argument 1
@1
D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
M=M-1
A=M
D=M
@Static.1
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
//FRAME=LCL
@LCL
D=M
@FRAME
M=D
//RET=*(FRAME-5)
@5
D=D-A
A=D
D=M
@RET
M=D
//*ARG=POP()
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
//SP=ARG+1
@ARG
D=M+1
@SP
M=D
//THAT=*(FRAME-1)
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
//THIS=*(FRAME-2)
@FRAME
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//ARG=*(FRAME-3)
@FRAME
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//LCL=*(FRAME-4)
@FRAME
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goto ret
@RET
A=M
0;JMP
//function Class2.get 0
(Class2.get)
//push static 0
@Static.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Static.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M
A=A-1
A=A-1
D=M
A=A+1
D=D-M
@SP
M=M-1
M=M-1
A=M
M=D
@SP
M=M+1
//return
//FRAME=LCL
@LCL
D=M
@FRAME
M=D
//RET=*(FRAME-5)
@5
D=D-A
A=D
D=M
@RET
M=D
//*ARG=POP()
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
//SP=ARG+1
@ARG
D=M+1
@SP
M=D
//THAT=*(FRAME-1)
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
//THIS=*(FRAME-2)
@FRAME
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//ARG=*(FRAME-3)
@FRAME
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//LCL=*(FRAME-4)
@FRAME
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goto ret
@RET
A=M
0;JMP
